2084. Drop Type 1 Orders for Customers With Type 0 Orders


# If a customer has at least one order of type 0, do not report any order of type 1 from that customer.
# otherwise report all

# 有0选0，不选1，没有0选1

select 
order_id,
customer_id,
order_type
from orders 
where order_type = 0
union all
(
select 
order_id,
customer_id,
order_type
from orders 
where order_type = 1
and customer_id not in 
(select distinct customer_id from orders where order_type = 0) 
)

# or window function by customer_id order by order_type
select order_id, customer_id, order_type from 
(select *, 
dense_rank() over (partition by customer_id order by order_type) rk 
from Orders) a 
where rk=1


2112. The Airport With the Most Traffic
# Write your MySQL query statement below
with t1 as 
(select 
departure_airport as airport,
flights_count as ct 
from flights 
union all 
select 
arrival_airport as airport,
flights_count as ct 
from flights )
select airport as airport_id
from 
t1 
group by airport
having sum(ct) = (select max(ct) from ( select airport, sum(ct) as ct from t1 group by airport )a )

# 表示等于最大值可以用 order by limit 1 
# having sum(ct) = (select sum(ct) as ct
#                              from t
#                              group by airport
#                              order by ct desc
#                              limit 1)



# 2118. Build the Equation

# use group_concate to concat all records in the table can specify order by and separator "" 

with table1 as 
(select 
case when power=0 then concat(if(factor<0,'-','+'),abs(factor))
when power=1 then concat(if(factor<0,'-','+'),abs(factor),'X')
else concat(if(factor<0,'-','+'),abs(factor),'X^',power) end as equ ,
power
from terms)
select concat(GROUP_CONCAT(equ  order by power desc SEPARATOR ""),'=0') as equation
from table1


# Write your MySQL query statement below

# 2142. The Number of Passengers in Each Bus I
# remember to group by , join by min arrival_time

select 
a.bus_id,
ifnull(count(distinct b.passenger_id),0) as passengers_cnt
from 
Buses as a 
left join 
(select 
passenger_id,
min(b.arrival_time) as arrival_time
from passengers as a 
left join 
buses as b 
on a.arrival_time <= b.arrival_time
group by passenger_id) as b 
on a.arrival_time = b.arrival_time
group by a.bus_id
ORDER BY a.bus_id


# Write your MySQL query statement below

# 2159. Order Two Columns Independently

#如果需要在并列情况下assign unique value需要用row_number（），1,2,3
#使用dense_rank() 会assign相同value ， 1,1,2

select 
a.first_col,
b.second_col
from
(select 
first_col,
row_number() over (order by first_col) as rk
from data ) as a 
inner join 
(select 
second_col,
row_number() over (order by second_col desc) as rk
from data) as b
on a.rk=b.rk
order by a.rk 

